// This file is generated by the create-files script in ../utils.
// Day 10 part 1
// https://adventofcode.com/2021/day/10
// input: day10/input.txt

type BracketCounter = { [key: string]: number };

const getOpeningBracket = (closingBracket: string) => {
  switch (closingBracket) {
    case '}':
      return '{';
    case ']':
      return '[';
    case ')':
      return '(';
    case '>':
      return '<';
    default:
      throw new Error(`Invalid closing bracket: ${closingBracket}`);
  }
};

const countBrackets = (str: string) => {
  return str.split('').reduce((unbalanced, c) => {
    switch (c) {
      case '(':
      case '[':
      case '{':
      case '<':
        if (!unbalanced[c]) {
          unbalanced[c] = 0;
        }
        unbalanced[c] += 1;
        break;
      case ')':
      case ']':
      case '}':
      case '>':
        unbalanced[getOpeningBracket(c)] -= 1;
        break;
      default:
        console.log('unexpected character:', c);
    }

    return unbalanced;
  }, {} as BracketCounter);
};

const d10p1Input = (await Deno.readTextFile('day10/input.txt'))
  .split('\n')
  .filter((l) => !!l);

const counted = d10p1Input
  .map(countBrackets)
  .filter((c) => !Object.values(c).every((v) => v === 0));

console.log(counted);
