// This file is generated by the create-files script in ../utils.
// Day 6 part 2
// https://adventofcode.com/2021/day/6#part2
// input: day6/input.txt

class LanternfishSchoolByCounting {
  private fishies: number[];

  constructor(initialFishies: number[]) {
    this.fishies = initialFishies.reduce(
      (skewl, f) => {
        skewl[f] = skewl[f] ? skewl[f] + 1 : 1;
        return skewl;
      },
      [0, 0, 0, 0, 0, 0, 0, 0, 0]
    );
  }

  public simulate(days: number) {
    while (days > 0) {
      this.simulateOneDay();
      days--;
    }
  }

  public simulateOneDay() {
    const newFishies = this.fishies.shift()!;
    this.fishies.push(newFishies);
    this.fishies[6] += newFishies;
  }

  public getCurrentState() {
    return this.fishies;
  }

  public get size() {
    return this.fishies.reduce((a, b) => a + b, 0);
  }
}

const d6p2Input = (await Deno.readTextFile('day6/input.txt'))
  .split(',')
  .filter((l) => !!l)
  .map((l) => parseInt(l, 10));

const school = new LanternfishSchoolByCounting(d6p2Input);

const daysToSimulate = 256;
school.simulate(daysToSimulate);

console.log('\n');
console.log(
  `After ${daysToSimulate} days, the size of the school is ${school.size}`
);
