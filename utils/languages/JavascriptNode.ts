import Language from './Language.ts';

export default class JavascriptNode implements Language {
  public static language = ['javascript', 'js'];

  private extension = 'js';
  private solutionFilePath: string;
  private testFilePath: string;
  private packageFilePath: string;

  constructor(private year: number, private day: number) {
    this.solutionFilePath = `${this.year}/day${this.day}/solution.${this.extension}`;
    this.testFilePath = `${this.year}/day${this.day}/solution.spec.${this.extension}`;
    this.packageFilePath = `${this.year}/day${this.day}/package.json`;
  }

  public getSolutionRootPath(): string {
    return `${this.year}/day${this.day}`;
  }

  public getSetupCommand(): string[] {
    return ['mkdir', '-p', this.getSolutionRootPath()];
  }

  public getPostInstallCommand(): string[] {
    return [
      'npm',
      'install',
      '--save-dev',
      '--prefix',
      this.getSolutionRootPath(),
      'ava',
    ];
  }

  public getFileNames(): {
    [key: string]: string;
    inputFile: string;
    solutionFile: string;
  } {
    return {
      inputFile: `${this.year}/day${this.day}/input.txt`,
      solutionFile: this.solutionFilePath,
      packageFile: this.packageFilePath,
      testFilePath: this.testFilePath,
    };
  }

  public getFileContents(path: string): string {
    if (path === this.solutionFilePath) {
      return this.getSolutionFileContents();
    } else if (path === this.testFilePath) {
      return this.getTestFileContents();
    } else if (path === this.packageFilePath) {
      return this.getPackageFileContents();
    } else {
      throw new Error(`Unknown path: ${path}`);
    }
  }

  private getSolutionFileContents(): string {
    return `
// This file is generated by the setup script located in the utils folder in the repository root.
// Day ${this.day}
// https://adventofcode.com/${this.year}/day/${this.day}
// input: day${this.day}/input.txt

const { readFileSync } = require('fs');

const day1Input = readFileSync('input.txt', 'utf8')
  .split('\\n')
  .filter((l) => !!l);

module.exports = { day1Input };
    `
      .trim()
      .concat('\n');
  }

  private getPackageFileContents(): string {
    return `
{
  "name": "day${this.day}",
  "scripts": {
    "test": "ava",
    "start": "node solution.js"
  }
}
    `
      .trim()
      .concat('\n');
  }

  private getTestFileContents(): string {
    return `
// This file is generated by the setup script located in the utils folder in the repository root.
// Run the tests using npm test

const test = require('ava');

const { day${this.day}Input } = require('./solution');

test('sanity test', (t) => {
  t.truthy(day${this.day}Input);
});
    `
      .trim()
      .concat('\n');
  }
}
